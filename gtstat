# Server overview script for web servers by GloboTech
# To lease a dedicated server or get managed services please visit www.globo.tech

#!/bin/bash

# Verify if dependencies are present or not
netstat=$(command -v netstat)
sar=$(command -v sar)
bc=$(command -v bc)
ethtool=$(command -v ethtool)
lsblk=$(command -v lsblk)

MISDEPS=()
if [ -z "$netstat" ]; then
	MISDEPS+=('netstat')
fi
if [ -z "$sar" ]; then
	MISDEPS+=('sysstat')
fi
if [ -z "$bc" ]; then
	MISDEPS+=('bc')
fi
if [ -z "$ethtool" ]; then
	MISDEPS+=('ethtool')
fi
if [ -z "$lsblk" ]; then
	MISDEPS+=('lsblk')
fi

if [ -z "$MISDEPS" ]; then
	STATUS="GOOD"
else
	STATUS="BAD"
	echo "Missing dependencies:" ${MISDEPS[@]}
	exit
fi

# Create a /tmp directory if its not present
if [ ! -d /tmp ]; then
	mkdir -p /tmp
fi
run=run
while [ $run = 'run' ]
do

# CPU Checks
CPUsar=`sar -u  1 1 | grep Average:`
CPUused=`echo "$CPUsar" | awk '{print $3}'`
CPUiowait=`echo "$CPUsar" | awk '{print $6}'`
CPUcores=`cat /proc/cpuinfo | grep processor | wc -l`

# Disk Checks
block=`fdisk -l| grep I/O|  awk '{print $7}'| head -1`
IOsar=`sar -b  1 1 | grep Average:`
bread_s=`echo "$IOsar" | awk '{print $5}' | tr . ' ' | awk '{print $1}'`; IOread=$((bread_s*block/1024/1024))
bwrtn_s=`echo "$IOsar" | awk '{print $6}' | tr . ' ' | awk '{print $1}'`; IOwrite=$((bwrtn_s*block/1024/1024))

# Ram and Swap Checks
RAMsar=`sar -r  1 1 | grep Average:`
used=`echo "$RAMsar" | awk '{print $3}' | tr . ' ' | awk '{print $1}'`
buffer=`echo "$RAMsar" | awk '{print $5}' | tr . ' ' | awk '{print $1}'`
cached=`echo "$RAMsar" | awk '{print $6}' | tr . ' ' | awk '{print $1}'`
RAMcmd=`free -m`
RAMtotal=`echo "$RAMcmd" | grep Mem: | awk '{print $2}' | tr . ' ' | awk '{print $1}'`
RAMused=$(((used)/1024))
RAMcommit=`echo "$RAMsar" | awk '{print $8}' | tr . ' ' | awk '{print $1}'`
SWAPsar=`sar -S 1 1 | grep Average:`
SWAPtotal=`echo "$RAMcmd" | grep Swap: | awk '{print $2}' | tr . ' ' | awk '{print $1}'`
SWAPused=`echo "$SWAPsar" | awk '{print $3}' | tr . ' ' | awk '{print $1}'`
SWAPcommit=`echo "$SWAPsar" | awk '{print $4}' | tr . ' ' | awk '{print $1}'`

# Bandwidth Checks
BWsar="`sar -n DEV 1 1`"
dlspeed=$(echo "scale=3;(`echo "$BWsar"|grep Average:| grep -v "IFACE"| awk {'print $5'} |tr "\n" "+"`0)"| bc -q| awk '{printf "%.0f\n", $0}')
ulspeed=$(echo "scale=3;(`echo "$BWsar"|grep Average:| grep -v "IFACE"| awk {'print $6'} |tr "\n" "+"`0)"| bc -q| awk '{printf "%.0f\n", $0}')

# Ports Checks
netstat_an_grep_80=`netstat -an|grep :80`
netstat_an_grep_443=`netstat -an|grep :443`
netstat_an_grep_ESTA=`netstat -an | grep ESTA`
netstatport80="`echo "$netstat_an_grep_80" |awk '!/:8080/'|awk '!/:8081/' |awk '{print $5}'|cut -d":" -f1|sort|uniq -c|sort -rn | grep '\.'| grep -v "0.0.0.0"`"
netstatport443="`echo "$netstat_an_grep_443" |awk '{print $5}'|cut -d":" -f1|sort|uniq -c|sort -rn | grep '\.'| grep -v "0.0.0.0"|tr -s " "`"
port80queries=`netstat -n | grep :80 |awk '!/:8080/'|awk '!/:8081/'|wc -l`
port443queries=`netstat -n | grep :443 |wc -l`
port80numberip=`echo "$netstatport80"| wc -l`
port443numberip=`echo "$netstatport443"| wc -l`
port80connects=`echo "$netstat_an_grep_80"|awk '!/:8080/'|awk '!/:8081/'| grep ESTA| wc -l`
port443connects=`echo "$netstat_an_grep_443" | grep ESTA | wc -l`

# Disk listing and their type
DISKblk=()
while IFS= read -r line; do
    DISKblk+=( "$line" )
done < <( lsblk | grep disk )
DISKlist=()
HDD="0"
SSD="0"
for DISKi in "${DISKblk[@]}"
do
	DEV=$(echo $DISKi | awk '{print $1}')
	TYPE=$(cat /sys/block/$DEV/queue/rotational)
	if [ $TYPE == "0" ]; then
		SSD=$((SSD+1))
	elif [ $TYPE == "1" ]; then
		HDD=$((HDD+1))
	fi
done

# Partitions space checks
DISKspace=()
while IFS= read -r line; do
    DISKspace+=( "$line" )
done < <( df -h | awk '{if (NR!=1) {print $1 " " substr($5, 1, length($5)-1)}}' )
DISKwarn=()
for DISKa in "${DISKspace[@]}"
do
	SpaceLevel=$(echo $DISKa | awk '{print $2}')
	if [ $SpaceLevel -ge "80" ]; then
		DISKwarn+=( "$DISKa% - " )
	fi
done
DISKinfo=$(echo ${DISKwarn[@]} | sed 's/.$//')
if [ -z "$DISKinfo" ]; then
	DISKinfo="None"
fi

# Determine gateway interface and its portspeed
DEFint=$(ip route | grep default | awk '{print $5}')
SPEEDint=$(ethtool $DEFint | grep Speed: | awk '{print $2}' | tr -cd '[0-9]')

# IPs connecting to the server
listiphostname=`netstat -tn | awk '{print $5}' | sed -e 's/:.*//' | grep '\.'|xargs -i sh -c 'echo {} $(getent hosts {})' | awk '$1 == $2 {print $2, $3; next}; {print}' | sort | uniq -c | sort -nr | head -24`
column=`pr -mT  --width=145 --page-width=145 <(echo "IP addresses making the most requests:"; echo "$listiphostname")`

# Current time on EST
date=`TZ=America/New_York date`

# Server Uptime, Load and Kernel
SRVuptime=$(uptime | awk -F'( |,|:)+' '{print $6"d",$8"h",$9"m"}')
SRVload=$(cat /proc/loadavg | awk '{print $1 " " $2 " " $3}')
SRVkern=$(cat /proc/version  | awk '{print $3}')

# Server hostname
srvhost=`hostname`

# Begin Console Output
clear
cat << "EOF"
   ________      __        ______          __       __          __________________________  ______
  / ____/ /___  / /_  ____/_  __/__  _____/ /_      \ \        / ____/_  __/ ___/_  __/   |/_  __/
 / / __/ / __ \/ __ \/ __ \/ / / _ \/ ___/ __ \      \ \      / / __  / /  \__ \ / / / /| | / /
/ /_/ / / /_/ / /_/ / /_/ / / /  __/ /__/ / / /       \ \    / /_/ / / /  ___/ // / / ___ |/ /
\____/_/\____/_.___/\____/_/  \___/\___/_/ /_/         \_\   \____/ /_/  /____//_/ /_/  |_/_/

EOF
echo '# Server statistics at a glance for '$srvhost' ### '$date' #

	Server uptime: '$SRVuptime'	Load: '$SRVload'	Kernel: '$SRVkern'

	CPU cores: '$CPUcores' 		RAM total: '$RAMtotal'MB 	SWAP total: '$SWAPtotal'MB 	Storage: '$SSD' SSD - '$HDD' HDD
	CPU usage: ~'$CPUused'% 	RAM used: '$RAMused'MB	SWAP used: '$SWAPused'MB 		Disk IO Read: ~'$IOread'MB/s
	CPU iowait: ~'$CPUiowait'% 	RAM commit: ~'$RAMcommit'% 	SWAP commit: ~'$SWAPcommit'% 	Disk IO Write: ~'$IOwrite'MB/s

	Disk partitions with usage over 80%: '$DISKinfo'

	The total number of QUERIES to port 80 is: '$port80queries'	(By '$port80numberip' IP Address request)
	The total number of QUERIES to port 443 is: '$port443queries'	(By '$port443numberip' IP Address request)

	 Total number of ESTABLISHED connections is:			|	WAN Port: '$SPEEDint'MB/s
	 Port 80: '$port80connects' connections						|	Incoming: '$dlspeed'KB/s
	 Port 443: '$port443connects' connections					|	Outgoing: '$ulspeed'KB/s

'"$column"'

For any assistance regarding your services with GloboTech feel free to contact us at support.globo.tech or support@globo.tech'
run=run;
done
